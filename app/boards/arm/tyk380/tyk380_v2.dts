/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52832_qfab.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>

#include <zephyr/sys/util_macro.h>

#define DECLARE_ROW(X) <&gpio0 X (GPIO_ACTIVE_HIGH | GPIO_OPEN_SOURCE)>
#define DECLARE_COL(X) <&gpio0 X (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>

/ {
    model = "TyK380v2";
    compatible = "tyk380,v2", "nrf,nrf52832_qfab";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "row2col";
        row-gpios =
            FOR_EACH(DECLARE_ROW, (,),
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            28,
            29,
            30,
            31
            );
        col-gpios =
            FOR_EACH(DECLARE_COL, (,),
            15
            );
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <1>;
        rows = <26>;
        map = <
            RC(0,0) RC(1,0) RC(2,0) RC(3,0) RC(4,0)
            RC(5,0) RC(6,0) RC(7,0) RC(8,0) RC(9,0)
            RC(10,0) RC(11,0) RC(12,0) RC(13,0) RC(14,0)
            RC(15,0) RC(16,0) RC(17,0) RC(18,0) RC(19,0)
            RC(20,0) RC(21,0) RC(22,0) RC(23,0) RC(24,0)
            RC(25,0)
        >;
    };
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&flash0 {
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        code_partition: partition@0 {
            reg = <0x00000000 0x0003e000>;
        };

        /* Set 8KiB of storage at the end of the 256KiB of flash */
        storage_partition: partition@3e000 {
            reg = <0x0003e000 0x00002000>;
        };
    };
};
