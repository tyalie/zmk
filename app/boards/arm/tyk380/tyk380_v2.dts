/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52832_qfab.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>

#include <zephyr/sys/util_macro.h>

#define DECLARE_ROW(X) <&gpio0 X (GPIO_ACTIVE_HIGH)>
#define DECLARE_COL(X) <&gpio0 X (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>

/ {
    model = "TyK380v2";
    compatible = "tyk380,v2", "nrf,nrf52832_qfab";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "row2col";
        row-gpios =
            FOR_EACH(DECLARE_ROW, (,),
            9,
            10,
            11,
            12,
            13,
            14,
			15,
            16,
            17,
            18,
            19,
            20,
            21,
            22
            );
        col-gpios =
            FOR_EACH(DECLARE_COL, (,),
            0,
			1,
			2,
			3,
			4,
			5,
			6,
			7,
			8,
            28,
            29
            );
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <11>;
        rows = <14>;
        map = <
            RC(4,8)  RC(0,1)  RC(10,7) RC(12,7) RC(5,8) RC(4,7)  RC(6,7) RC(4,9) RC(5,0) RC(5,2)  RC(4,1) RC(3,9) RC(6,0)  RC(3,7) RC(3,2)
            RC(2,6)  RC(12,8) RC(10,8) RC(7,8)  RC(1,6) RC(13,8) RC(1,8) RC(2,0) RC(3,5) RC(2,4)  RC(2,5) RC(6,5) RC(5,10) RC(4,10)
			RC(2,8)  RC(8,8)  RC(6,10) RC(2,10) RC(0,4) RC(13,7) RC(0,8) RC(3,4) RC(1,1) RC(4,5)  RC(3,0) RC(8,7) RC(11,8) RC(4,3)
            RC(8,5)  RC(5,1)  RC(4,2)  RC(3,3)  RC(5,6) RC(0,0)  RC(0,2) RC(2,2) RC(6,2) RC(1,9)  RC(6,4) RC(6,3) RC(2,1)
            RC(13,9) RC(11,7) RC(9,7)  RC(2,7)  RC(1,5) RC(0,7)  RC(9,8) RC(6,6) RC(5,4) RC(3,10) RC(2,9) RC(1,7) RC(13,10)
            RC(11,2) RC(7,6) RC(9,4) RC(12,0)             RC(7,7)           RC(12,1) RC(10,3) RC(0,5) RC(1,4) RC(1,0) RC(0,9)
        >;
    };
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&flash0 {
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        code_partition: partition@0 {
            reg = <0x00000000 0x0003e000>;
        };

        /* Set 8KiB of storage at the end of the 256KiB of flash */
        storage_partition: partition@3e000 {
            reg = <0x0003e000 0x00002000>;
        };
    };
};
